import {
  __commonJS,
  __esm,
  __export,
  __toCommonJS
} from "./chunk-S5KM4IGW.js";

// node_modules/oaf-routing/dist/disable-auto-scroll-restoration.js
var require_disable_auto_scroll_restoration = __commonJS({
  "node_modules/oaf-routing/dist/disable-auto-scroll-restoration.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.disableAutoScrollRestoration = void 0;
    var disableAutoScrollRestoration = function() {
      if ("scrollRestoration" in window.history) {
        var original_1 = window.history.scrollRestoration;
        window.history.scrollRestoration = "manual";
        return function() {
          return window.history.scrollRestoration = original_1;
        };
      } else {
        return function() {
        };
      }
    };
    exports.disableAutoScrollRestoration = disableAutoScrollRestoration;
  }
});

// node_modules/oaf-routing/dist/page-state-memory.js
var require_page_state_memory = __commonJS({
  "node_modules/oaf-routing/dist/page-state-memory.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.createPageStateMemory = void 0;
    var createPageStateMemory = function() {
      var locations = new Array();
      var pageStateMap = /* @__PURE__ */ new Map();
      var handlePushAction = function(previousLocationKey, nextLocationKey) {
        var desiredLocationsLength = locations.indexOf(previousLocationKey) + 1;
        while (locations.length > desiredLocationsLength) {
          var key = locations.pop();
          if (key !== void 0) {
            pageStateMap.delete(key);
          }
        }
        locations.push(nextLocationKey);
      };
      var handleReplaceAction = function(previousLocationKey, nextLocationKey) {
        var indexToReplace = locations.indexOf(previousLocationKey);
        if (indexToReplace !== -1) {
          locations[indexToReplace] = nextLocationKey;
        }
        pageStateMap.delete(previousLocationKey);
      };
      return {
        pageState: function(key) {
          return pageStateMap.get(key);
        },
        update: function(action, previousLocationKey, nextLocationKey, previousPageState) {
          pageStateMap.set(previousLocationKey, previousPageState);
          if (action === "PUSH") {
            handlePushAction(previousLocationKey, nextLocationKey);
          } else if (action === "REPLACE") {
            handleReplaceAction(previousLocationKey, nextLocationKey);
          }
        }
      };
    };
    exports.createPageStateMemory = createPageStateMemory;
  }
});

// node_modules/oaf-side-effects/dist/index.js
var require_dist = __commonJS({
  "node_modules/oaf-side-effects/dist/index.js"(exports) {
    "use strict";
    var __awaiter = exports && exports.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    var __generator = exports && exports.__generator || function(thisArg, body) {
      var _ = { label: 0, sent: function() {
        if (t[0] & 1)
          throw t[1];
        return t[1];
      }, trys: [], ops: [] }, f, y, t, g;
      return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
        return this;
      }), g;
      function verb(n) {
        return function(v) {
          return step([n, v]);
        };
      }
      function step(op) {
        if (f)
          throw new TypeError("Generator is already executing.");
        while (_)
          try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
              return t;
            if (y = 0, t)
              op = [op[0] & 2, t.value];
            switch (op[0]) {
              case 0:
              case 1:
                t = op;
                break;
              case 4:
                _.label++;
                return { value: op[1], done: false };
              case 5:
                _.label++;
                y = op[1];
                op = [0];
                continue;
              case 7:
                op = _.ops.pop();
                _.trys.pop();
                continue;
              default:
                if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                  _ = 0;
                  continue;
                }
                if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                  _.label = op[1];
                  break;
                }
                if (op[0] === 6 && _.label < t[1]) {
                  _.label = t[1];
                  t = op;
                  break;
                }
                if (t && _.label < t[2]) {
                  _.label = t[2];
                  _.ops.push(op);
                  break;
                }
                if (t[2])
                  _.ops.pop();
                _.trys.pop();
                continue;
            }
            op = body.call(thisArg, _);
          } catch (e) {
            op = [6, e];
            y = 0;
          } finally {
            f = t = 0;
          }
        if (op[0] & 5)
          throw op[1];
        return { value: op[0] ? op[1] : void 0, done: true };
      }
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.focusInvalidForm = exports.closestInsideForm = exports.hideOnscreenKeyboard = exports.announce = exports.resetFocus = exports.focusAndScrollIntoViewIfRequired = exports.scrollIntoViewIfRequired = exports.scrollIntoView = exports.focusElement = exports.setScrollPosition = exports.prefersReducedMotion = exports.getScrollPosition = exports.elementFromTarget = exports.isInViewport = exports.setTitle = exports.elementFromHash = void 0;
    var elementFromHash = function(hash) {
      if (typeof hash !== "string") {
        return void 0;
      }
      switch (hash) {
        case "#":
          return document.documentElement || document.body.parentElement || document.body;
        case "":
          return void 0;
        default:
          var element = document.getElementById(hash.substring(1));
          if (element !== null) {
            return element;
          } else if (hash === "#top") {
            return document.documentElement || document.body.parentElement || document.body;
          } else {
            return void 0;
          }
      }
    };
    exports.elementFromHash = elementFromHash;
    var setTitle = function(title) {
      if (typeof title !== "string" || title.trim() === "") {
        console.error("Title [".concat(title, "] is invalid. See https://www.w3.org/TR/UNDERSTANDING-WCAG20/navigation-mechanisms-title.html"));
      }
      document.title = title;
    };
    exports.setTitle = setTitle;
    var isInViewport = function(element) {
      var rect = element.getBoundingClientRect();
      return rect.top >= 0 && rect.left >= 0 && rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) && rect.right <= (window.innerWidth || document.documentElement.clientWidth);
    };
    exports.isInViewport = isInViewport;
    var querySelector = function(selectors, parent) {
      if (parent === void 0) {
        parent = document;
      }
      try {
        var result = parent.querySelector(selectors);
        return result === null ? void 0 : result;
      } catch (_a) {
        console.warn("Syntax error in selector [".concat(selectors, "]."));
        return void 0;
      }
    };
    var elementFromTarget = function(target, parent) {
      if (parent === void 0) {
        parent = document;
      }
      return target instanceof Element ? target : querySelector(target, parent);
    };
    exports.elementFromTarget = elementFromTarget;
    var getScrollPosition = function() {
      var documentElement = document.documentElement || document.body.parentNode || document.body;
      var x = window.scrollX || window.pageXOffset || documentElement.scrollLeft;
      var y = window.scrollY || window.pageYOffset || documentElement.scrollTop;
      return { x, y };
    };
    exports.getScrollPosition = getScrollPosition;
    var prefersReducedMotion = function() {
      return typeof window.matchMedia === "function" && window.matchMedia("(prefers-reduced-motion: reduce)").matches;
    };
    exports.prefersReducedMotion = prefersReducedMotion;
    var setScrollPosition = function(scrollPosition, smoothScroll) {
      if (smoothScroll === void 0) {
        smoothScroll = false;
      }
      if (!smoothScroll || (0, exports.prefersReducedMotion)()) {
        window.scrollTo(scrollPosition.x, scrollPosition.y);
      } else {
        try {
          window.scrollTo({
            behavior: "smooth",
            left: scrollPosition.x,
            top: scrollPosition.y
          });
        } catch (_a) {
          window.scrollTo(scrollPosition.x, scrollPosition.y);
        }
      }
    };
    exports.setScrollPosition = setScrollPosition;
    var getScrollPositionRestorer = function() {
      var scrollPosition = (0, exports.getScrollPosition)();
      return function() {
        (0, exports.setScrollPosition)(scrollPosition);
      };
    };
    var withRestoreScrollPosition = function(funcWithScrollSideEffect) {
      var restoreScrollPosition = getScrollPositionRestorer();
      var result = funcWithScrollSideEffect();
      restoreScrollPosition();
      return result;
    };
    var focusElement = function(target, preventScroll) {
      if (preventScroll === void 0) {
        preventScroll = false;
      }
      return __awaiter(void 0, void 0, void 0, function() {
        var element, blurListener_1;
        return __generator(this, function(_a) {
          element = (0, exports.elementFromTarget)(target);
          if (element === void 0) {
            console.warn(
              "Cannot focus element. Element [".concat(target.toString(), "] not found.")
            );
            return [2, Promise.resolve(false)];
          }
          if (!(element instanceof HTMLElement || element instanceof SVGElement)) {
            console.warn(
              "Cannot focus element. Element [".concat(target.toString(), "] is not an HTMLElement or SVGElement.")
            );
            return [2, Promise.resolve(false)];
          }
          try {
            if (!element.hasAttribute("tabindex")) {
              element.setAttribute("tabindex", "-1");
              blurListener_1 = function() {
                element.removeAttribute("tabindex");
                element.removeEventListener("blur", blurListener_1);
              };
              element.addEventListener("blur", blurListener_1);
            }
            if (preventScroll) {
              withRestoreScrollPosition(function() {
                try {
                  element.focus({ preventScroll: true });
                } catch (_a2) {
                  element.focus();
                }
              });
            } else {
              element.focus();
            }
            return [2, document.activeElement === element];
          } catch (e) {
            console.error(e);
            return [2, false];
          }
          return [2];
        });
      });
    };
    exports.focusElement = focusElement;
    var scrollIntoView = function(element, smoothScroll) {
      if (smoothScroll === void 0) {
        smoothScroll = false;
      }
      if (element === document.documentElement || element === document.body) {
        (0, exports.setScrollPosition)({ x: 0, y: 0 }, smoothScroll);
      } else {
        if (!smoothScroll || (0, exports.prefersReducedMotion)()) {
          element.scrollIntoView();
        } else {
          try {
            element.scrollIntoView({ behavior: "smooth" });
          } catch (_a) {
            element.scrollIntoView();
          }
        }
      }
    };
    exports.scrollIntoView = scrollIntoView;
    var scrollIntoViewIfRequired = function(target, smoothScroll, inViewport) {
      if (smoothScroll === void 0) {
        smoothScroll = false;
      }
      if (inViewport === void 0) {
        inViewport = exports.isInViewport;
      }
      var element = (0, exports.elementFromTarget)(target);
      if (element !== void 0 && !inViewport(element)) {
        (0, exports.scrollIntoView)(element, smoothScroll);
      }
    };
    exports.scrollIntoViewIfRequired = scrollIntoViewIfRequired;
    var focusAndScrollIntoViewIfRequired = function(focusTarget, scrollIntoViewTarget, smoothScroll) {
      if (smoothScroll === void 0) {
        smoothScroll = false;
      }
      return __awaiter(void 0, void 0, void 0, function() {
        var elementToFocus, elementToScrollIntoView, preventScroll, result, _a;
        var _b;
        return __generator(this, function(_c) {
          switch (_c.label) {
            case 0:
              elementToFocus = (0, exports.elementFromTarget)(focusTarget);
              elementToScrollIntoView = (_b = (0, exports.elementFromTarget)(scrollIntoViewTarget)) !== null && _b !== void 0 ? _b : elementToFocus;
              preventScroll = smoothScroll || elementToFocus !== elementToScrollIntoView;
              _a = elementToFocus !== void 0;
              if (!_a)
                return [3, 2];
              return [4, (0, exports.focusElement)(elementToFocus, preventScroll)];
            case 1:
              _a = _c.sent();
              _c.label = 2;
            case 2:
              result = _a;
              if (elementToScrollIntoView !== void 0) {
                (0, exports.scrollIntoViewIfRequired)(elementToScrollIntoView, smoothScroll);
              }
              return [2, result];
          }
        });
      });
    };
    exports.focusAndScrollIntoViewIfRequired = focusAndScrollIntoViewIfRequired;
    var resetFocus = function(primaryFocusTarget, focusTarget, smoothScroll) {
      if (smoothScroll === void 0) {
        smoothScroll = false;
      }
      return __awaiter(void 0, void 0, void 0, function() {
        var elementToFocus, primaryFocusElement, targets, _i, targets_1, targetElement, didFocus, e_1;
        return __generator(this, function(_a) {
          switch (_a.label) {
            case 0:
              elementToFocus = focusTarget !== void 0 ? (0, exports.elementFromTarget)(focusTarget) : void 0;
              primaryFocusElement = (0, exports.elementFromTarget)(primaryFocusTarget);
              targets = [
                elementToFocus,
                primaryFocusElement,
                document.documentElement,
                document.body
              ];
              _i = 0, targets_1 = targets;
              _a.label = 1;
            case 1:
              if (!(_i < targets_1.length))
                return [3, 6];
              targetElement = targets_1[_i];
              if (!(targetElement instanceof Element))
                return [3, 5];
              _a.label = 2;
            case 2:
              _a.trys.push([2, 4, , 5]);
              return [4, (0, exports.focusAndScrollIntoViewIfRequired)(targetElement, targetElement, smoothScroll)];
            case 3:
              didFocus = _a.sent();
              if (didFocus) {
                return [2, true];
              }
              return [3, 5];
            case 4:
              e_1 = _a.sent();
              console.error(e_1);
              return [3, 5];
            case 5:
              _i++;
              return [3, 1];
            case 6:
              return [2, false];
          }
        });
      });
    };
    exports.resetFocus = resetFocus;
    var createAnnounceDiv = function(id, politeness) {
      var div = document.createElement("div");
      div.setAttribute("id", id);
      div.setAttribute("role", "status");
      div.setAttribute("aria-live", politeness);
      div.setAttribute("aria-atomic", "true");
      div.style.position = "absolute";
      div.style.width = "1px";
      div.style.height = "1px";
      div.style.padding = "0";
      div.style.margin = "-1px";
      div.style.overflow = "hidden";
      div.style.clip = "rect(0, 0, 0, 0)";
      div.style.whiteSpace = "nowrap";
      div.style.border = "0";
      document.body.appendChild(div);
      return div;
    };
    var announce = function(message, announcementsDivId, setMessageTimeout, clearMessageTimeout, politeness) {
      var _a;
      if (announcementsDivId === void 0) {
        announcementsDivId = "announcements";
      }
      if (setMessageTimeout === void 0) {
        setMessageTimeout = 50;
      }
      if (clearMessageTimeout === void 0) {
        clearMessageTimeout = 500;
      }
      if (politeness === void 0) {
        politeness = "polite";
      }
      var announceDiv = (_a = document.getElementById(announcementsDivId)) !== null && _a !== void 0 ? _a : createAnnounceDiv(announcementsDivId, politeness);
      var p1 = new Promise(function(resolve) {
        setTimeout(function() {
          announceDiv.innerText = message;
          resolve(void 0);
        }, setMessageTimeout);
      });
      var p2 = new Promise(function(resolve) {
        setTimeout(function() {
          announceDiv.innerText = "";
          resolve(void 0);
        }, clearMessageTimeout);
      });
      return Promise.all([p1, p2]);
    };
    exports.announce = announce;
    var hideOnscreenKeyboard = function() {
      var activeElement = document.activeElement;
      var inputType = activeElement instanceof HTMLInputElement ? activeElement.getAttribute("type") : void 0;
      if (activeElement !== null && activeElement instanceof HTMLElement && inputType !== "checkbox" && inputType !== "radio" && inputType !== "submit" && inputType !== "reset" && inputType !== "button") {
        activeElement.blur();
        activeElement.setAttribute("data-oaf-keyboard-hack", "true");
        var originalReadonly_1 = activeElement.getAttribute("readonly");
        var originalDisabled_1 = activeElement.getAttribute("disabled");
        activeElement.setAttribute("readonly", "true");
        if (activeElement instanceof HTMLTextAreaElement) {
          activeElement.setAttribute("disabled", "true");
        }
        return new Promise(function(resolve) {
          setTimeout(function() {
            originalReadonly_1 !== null ? activeElement.setAttribute("readonly", originalReadonly_1) : activeElement.removeAttribute("readonly");
            if (activeElement instanceof HTMLTextAreaElement) {
              originalDisabled_1 !== null ? activeElement.setAttribute("disabled", originalDisabled_1) : activeElement.removeAttribute("disabled");
            }
            activeElement.removeAttribute("data-oaf-keyboard-hack");
            activeElement.focus();
            resolve();
          });
        });
      } else {
        return Promise.resolve();
      }
    };
    exports.hideOnscreenKeyboard = hideOnscreenKeyboard;
    var closestInsideForm = function(element, selector, form) {
      if (element === form || element.parentElement === null) {
        return void 0;
      } else if (element.matches(selector)) {
        return element;
      } else {
        return (0, exports.closestInsideForm)(element.parentElement, selector, form);
      }
    };
    exports.closestInsideForm = closestInsideForm;
    var focusInvalidForm = function(formTarget, invalidElementSelector, elementWrapperSelector, globalFormErrorSelector, smoothScroll) {
      if (smoothScroll === void 0) {
        smoothScroll = false;
      }
      return __awaiter(void 0, void 0, void 0, function() {
        var form, firstInvalidElement, globalFormErrorElement, elementToFocus, firstInvalidElementWrapper;
        return __generator(this, function(_a) {
          switch (_a.label) {
            case 0:
              form = (0, exports.elementFromTarget)(formTarget);
              if (form === void 0) {
                console.warn(
                  "No form matching [".concat(formTarget.toString(), "] found in document. Users of keyboards, screen readers and other assistive technology will have a degraded experience.")
                );
                return [2, Promise.resolve(false)];
              }
              firstInvalidElement = (0, exports.elementFromTarget)(invalidElementSelector, form);
              globalFormErrorElement = firstInvalidElement === void 0 && globalFormErrorSelector !== void 0 ? (0, exports.elementFromTarget)(globalFormErrorSelector, form) : void 0;
              elementToFocus = firstInvalidElement !== null && firstInvalidElement !== void 0 ? firstInvalidElement : globalFormErrorElement;
              if (elementToFocus === void 0) {
                console.warn(
                  "No invalid form element matching [".concat(invalidElementSelector, "] found inside form [").concat(formTarget.toString(), "]. Users of keyboards, screen readers and other assistive technology will have a degraded experience.")
                );
                return [2, Promise.resolve(false)];
              }
              firstInvalidElementWrapper = elementWrapperSelector !== void 0 && firstInvalidElement !== void 0 && typeof firstInvalidElement.matches === "function" ? (0, exports.closestInsideForm)(firstInvalidElement, elementWrapperSelector, form) : void 0;
              return [4, (0, exports.hideOnscreenKeyboard)()];
            case 1:
              _a.sent();
              return [2, (0, exports.focusAndScrollIntoViewIfRequired)(elementToFocus, firstInvalidElementWrapper !== null && firstInvalidElementWrapper !== void 0 ? firstInvalidElementWrapper : elementToFocus, smoothScroll)];
          }
        });
      });
    };
    exports.focusInvalidForm = focusInvalidForm;
  }
});

// node_modules/unique-selector/src/getID.js
function getID(el) {
  const id = el.getAttribute("id");
  if (id !== null && id !== "") {
    return id.match(/(?:^\d|:)/) ? `[id="${id}"]` : "#" + id;
  }
  return null;
}
var init_getID = __esm({
  "node_modules/unique-selector/src/getID.js"() {
  }
});

// node_modules/unique-selector/src/getClasses.js
function getClasses(el) {
  if (!el.hasAttribute("class")) {
    return [];
  }
  try {
    let classList = Array.prototype.slice.call(el.classList);
    return classList.filter((item) => !/^[a-z_-][a-z\d_-]*$/i.test(item) ? null : item);
  } catch (e) {
    let className = el.getAttribute("class");
    className = className.trim().replace(/\s+/g, " ");
    return className.split(" ");
  }
}
function getClassSelectors(el) {
  const classList = getClasses(el).filter(Boolean);
  return classList.map((cl) => `.${cl}`);
}
var init_getClasses = __esm({
  "node_modules/unique-selector/src/getClasses.js"() {
  }
});

// node_modules/unique-selector/src/getCombinations.js
function kCombinations(result, items, data, start, end, index, k) {
  if (index === k) {
    result.push(data.slice(0, index).join(""));
    return;
  }
  for (let i = start; i <= end && end - i + 1 >= k - index; ++i) {
    data[index] = items[i];
    kCombinations(result, items, data, i + 1, end, index + 1, k);
  }
}
function getCombinations(items, k) {
  const result = [], n = items.length, data = [];
  for (var l = 1; l <= k; ++l) {
    kCombinations(result, items, data, 0, n - 1, 0, l);
  }
  return result;
}
var init_getCombinations = __esm({
  "node_modules/unique-selector/src/getCombinations.js"() {
  }
});

// node_modules/unique-selector/src/getAttributes.js
function getAttributes(el, attributesToIgnore = ["id", "class", "length"]) {
  const { attributes } = el;
  const attrs = [...attributes];
  return attrs.reduce((sum, next) => {
    if (!(attributesToIgnore.indexOf(next.nodeName) > -1)) {
      sum.push(`[${next.nodeName}="${next.value}"]`);
    }
    return sum;
  }, []);
}
var init_getAttributes = __esm({
  "node_modules/unique-selector/src/getAttributes.js"() {
  }
});

// node_modules/unique-selector/src/isElement.js
function isElement(el) {
  let isElem;
  if (typeof HTMLElement === "object") {
    isElem = el instanceof HTMLElement;
  } else {
    isElem = !!el && typeof el === "object" && el.nodeType === 1 && typeof el.nodeName === "string";
  }
  return isElem;
}
var init_isElement = __esm({
  "node_modules/unique-selector/src/isElement.js"() {
  }
});

// node_modules/unique-selector/src/getNthChild.js
function getNthChild(element) {
  let counter = 0;
  let k;
  let sibling;
  const { parentNode } = element;
  if (Boolean(parentNode)) {
    const { childNodes } = parentNode;
    const len = childNodes.length;
    for (k = 0; k < len; k++) {
      sibling = childNodes[k];
      if (isElement(sibling)) {
        counter++;
        if (sibling === element) {
          return `:nth-child(${counter})`;
        }
      }
    }
  }
  return null;
}
var init_getNthChild = __esm({
  "node_modules/unique-selector/src/getNthChild.js"() {
    init_isElement();
  }
});

// node_modules/unique-selector/src/getTag.js
function getTag(el) {
  return el.tagName.toLowerCase().replace(/:/g, "\\:");
}
var init_getTag = __esm({
  "node_modules/unique-selector/src/getTag.js"() {
  }
});

// node_modules/unique-selector/src/isUnique.js
function isUnique(el, selector) {
  if (!Boolean(selector))
    return false;
  const elems = el.ownerDocument.querySelectorAll(selector);
  return elems.length === 1 && elems[0] === el;
}
var init_isUnique = __esm({
  "node_modules/unique-selector/src/isUnique.js"() {
  }
});

// node_modules/unique-selector/src/getParents.js
function getParents(el) {
  const parents = [];
  let currentElement = el;
  while (isElement(currentElement)) {
    parents.push(currentElement);
    currentElement = currentElement.parentNode;
  }
  return parents;
}
var init_getParents = __esm({
  "node_modules/unique-selector/src/getParents.js"() {
    init_isElement();
  }
});

// node_modules/unique-selector/src/index.js
var src_exports = {};
__export(src_exports, {
  default: () => unique
});
function getAllSelectors(el, selectors, attributesToIgnore) {
  const funcs = {
    "Tag": getTag,
    "NthChild": getNthChild,
    "Attributes": (elem) => getAttributes(elem, attributesToIgnore),
    "Class": getClassSelectors,
    "ID": getID
  };
  return selectors.reduce((res, next) => {
    res[next] = funcs[next](el);
    return res;
  }, {});
}
function testUniqueness(element, selector) {
  const { parentNode } = element;
  const elements = parentNode.querySelectorAll(selector);
  return elements.length === 1 && elements[0] === element;
}
function getFirstUnique(element, selectors) {
  return selectors.find(testUniqueness.bind(null, element));
}
function getUniqueCombination(element, items, tag) {
  let combinations = getCombinations(items, 3), firstUnique = getFirstUnique(element, combinations);
  if (Boolean(firstUnique)) {
    return firstUnique;
  }
  if (Boolean(tag)) {
    combinations = combinations.map((combination) => tag + combination);
    firstUnique = getFirstUnique(element, combinations);
    if (Boolean(firstUnique)) {
      return firstUnique;
    }
  }
  return null;
}
function getUniqueSelector(element, selectorTypes, attributesToIgnore, excludeRegex) {
  let foundSelector;
  const elementSelectors = getAllSelectors(element, selectorTypes, attributesToIgnore);
  if (excludeRegex && excludeRegex instanceof RegExp) {
    elementSelectors.ID = excludeRegex.test(elementSelectors.ID) ? null : elementSelectors.ID;
    elementSelectors.Class = elementSelectors.Class.filter((className) => !excludeRegex.test(className));
  }
  for (let selectorType of selectorTypes) {
    const { ID, Tag, Class: Classes, Attributes, NthChild } = elementSelectors;
    switch (selectorType) {
      case "ID":
        if (Boolean(ID) && testUniqueness(element, ID)) {
          return ID;
        }
        break;
      case "Tag":
        if (Boolean(Tag) && testUniqueness(element, Tag)) {
          return Tag;
        }
        break;
      case "Class":
        if (Boolean(Classes) && Classes.length) {
          foundSelector = getUniqueCombination(element, Classes, Tag);
          if (foundSelector) {
            return foundSelector;
          }
        }
        break;
      case "Attributes":
        if (Boolean(Attributes) && Attributes.length) {
          foundSelector = getUniqueCombination(element, Attributes, Tag);
          if (foundSelector) {
            return foundSelector;
          }
        }
        break;
      case "NthChild":
        if (Boolean(NthChild)) {
          return NthChild;
        }
    }
  }
  return "*";
}
function unique(el, options = {}) {
  const {
    selectorTypes = ["ID", "Class", "Tag", "NthChild"],
    attributesToIgnore = ["id", "class", "length"],
    excludeRegex = null
  } = options;
  const allSelectors = [];
  const parents = getParents(el);
  for (let elem of parents) {
    const selector = getUniqueSelector(elem, selectorTypes, attributesToIgnore, excludeRegex);
    if (Boolean(selector)) {
      allSelectors.push(selector);
    }
  }
  const selectors = [];
  for (let it of allSelectors) {
    selectors.unshift(it);
    const selector = selectors.join(" > ");
    if (isUnique(el, selector)) {
      return selector;
    }
  }
  return null;
}
var init_src = __esm({
  "node_modules/unique-selector/src/index.js"() {
    init_getID();
    init_getClasses();
    init_getCombinations();
    init_getAttributes();
    init_getNthChild();
    init_getTag();
    init_isUnique();
    init_getParents();
  }
});

// node_modules/oaf-routing/dist/page-state.js
var require_page_state = __commonJS({
  "node_modules/oaf-routing/dist/page-state.js"(exports) {
    "use strict";
    var __assign = exports && exports.__assign || function() {
      __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
          s = arguments[i];
          for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p))
              t[p] = s[p];
        }
        return t;
      };
      return __assign.apply(this, arguments);
    };
    var __awaiter = exports && exports.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    var __generator = exports && exports.__generator || function(thisArg, body) {
      var _ = { label: 0, sent: function() {
        if (t[0] & 1)
          throw t[1];
        return t[1];
      }, trys: [], ops: [] }, f, y, t, g;
      return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
        return this;
      }), g;
      function verb(n) {
        return function(v) {
          return step([n, v]);
        };
      }
      function step(op) {
        if (f)
          throw new TypeError("Generator is already executing.");
        while (_)
          try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
              return t;
            if (y = 0, t)
              op = [op[0] & 2, t.value];
            switch (op[0]) {
              case 0:
              case 1:
                t = op;
                break;
              case 4:
                _.label++;
                return { value: op[1], done: false };
              case 5:
                _.label++;
                y = op[1];
                op = [0];
                continue;
              case 7:
                op = _.ops.pop();
                _.trys.pop();
                continue;
              default:
                if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                  _ = 0;
                  continue;
                }
                if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                  _.label = op[1];
                  break;
                }
                if (op[0] === 6 && _.label < t[1]) {
                  _.label = t[1];
                  t = op;
                  break;
                }
                if (t && _.label < t[2]) {
                  _.label = t[2];
                  _.ops.push(op);
                  break;
                }
                if (t[2])
                  _.ops.pop();
                _.trys.pop();
                continue;
            }
            op = body.call(thisArg, _);
          } catch (e) {
            op = [6, e];
            y = 0;
          } finally {
            f = t = 0;
          }
        if (op[0] & 5)
          throw op[1];
        return { value: op[0] ? op[1] : void 0, done: true };
      }
    };
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.setPageState = exports.getPageState = void 0;
    var oaf_side_effects_1 = require_dist();
    var unique_selector_1 = __importDefault((init_src(), __toCommonJS(src_exports)));
    var getPageState = function() {
      var focusSelector = document.activeElement !== null ? (0, unique_selector_1.default)(document.activeElement) : void 0;
      return __assign(__assign({}, (0, oaf_side_effects_1.getScrollPosition)()), { focusSelector });
    };
    exports.getPageState = getPageState;
    var setPageState = function(pageState, primaryFocusTarget) {
      return __awaiter(void 0, void 0, void 0, function() {
        var previouslyFocusedElement, elementToFocus;
        var _a;
        return __generator(this, function(_b) {
          switch (_b.label) {
            case 0:
              previouslyFocusedElement = pageState.focusSelector !== void 0 ? (0, oaf_side_effects_1.elementFromTarget)(pageState.focusSelector) : void 0;
              elementToFocus = (_a = previouslyFocusedElement !== null && previouslyFocusedElement !== void 0 ? previouslyFocusedElement : (0, oaf_side_effects_1.elementFromTarget)(primaryFocusTarget)) !== null && _a !== void 0 ? _a : document.body;
              return [4, (0, oaf_side_effects_1.focusElement)(elementToFocus, true)];
            case 1:
              _b.sent();
              (0, oaf_side_effects_1.setScrollPosition)(pageState);
              return [2];
          }
        });
      });
    };
    exports.setPageState = setPageState;
  }
});

// node_modules/oaf-routing/dist/router-settings.js
var require_router_settings = __commonJS({
  "node_modules/oaf-routing/dist/router-settings.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.defaultSettings = void 0;
    exports.defaultSettings = {
      announcementsDivId: "announcements",
      primaryFocusTarget: "main h1, [role=main] h1",
      documentTitle: function() {
        return document.title;
      },
      documentTitleAnnounceFallback: "new page",
      navigationMessage: function(title) {
        return "Navigated to ".concat(title, ".");
      },
      shouldHandleAction: function() {
        return true;
      },
      disableAutoScrollRestoration: true,
      announcePageNavigation: true,
      repairFocus: true,
      setPageTitle: false,
      handleHashFragment: true,
      restorePageStateOnPop: true,
      renderTimeout: 0,
      defaultPageState: { x: 0, y: 0 },
      smoothScroll: void 0,
      setMessageTimeout: void 0,
      clearMessageTimeout: void 0
    };
  }
});

// node_modules/oaf-routing/dist/oaf-router.js
var require_oaf_router = __commonJS({
  "node_modules/oaf-routing/dist/oaf-router.js"(exports) {
    "use strict";
    var __assign = exports && exports.__assign || function() {
      __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
          s = arguments[i];
          for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p))
              t[p] = s[p];
        }
        return t;
      };
      return __assign.apply(this, arguments);
    };
    var __awaiter = exports && exports.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    var __generator = exports && exports.__generator || function(thisArg, body) {
      var _ = { label: 0, sent: function() {
        if (t[0] & 1)
          throw t[1];
        return t[1];
      }, trys: [], ops: [] }, f, y, t, g;
      return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
        return this;
      }), g;
      function verb(n) {
        return function(v) {
          return step([n, v]);
        };
      }
      function step(op) {
        if (f)
          throw new TypeError("Generator is already executing.");
        while (_)
          try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
              return t;
            if (y = 0, t)
              op = [op[0] & 2, t.value];
            switch (op[0]) {
              case 0:
              case 1:
                t = op;
                break;
              case 4:
                _.label++;
                return { value: op[1], done: false };
              case 5:
                _.label++;
                y = op[1];
                op = [0];
                continue;
              case 7:
                op = _.ops.pop();
                _.trys.pop();
                continue;
              default:
                if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                  _ = 0;
                  continue;
                }
                if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                  _.label = op[1];
                  break;
                }
                if (op[0] === 6 && _.label < t[1]) {
                  _.label = t[1];
                  t = op;
                  break;
                }
                if (t && _.label < t[2]) {
                  _.label = t[2];
                  _.ops.push(op);
                  break;
                }
                if (t[2])
                  _.ops.pop();
                _.trys.pop();
                continue;
            }
            op = body.call(thisArg, _);
          } catch (e) {
            op = [6, e];
            y = 0;
          } finally {
            f = t = 0;
          }
        if (op[0] & 5)
          throw op[1];
        return { value: op[0] ? op[1] : void 0, done: true };
      }
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.createOafRouter = void 0;
    var oaf_side_effects_1 = require_dist();
    var _1 = require_dist2();
    var createPageStateMemoryWithFallback = function(settings) {
      var dummyPageStateMemory = {
        pageState: function() {
          return void 0;
        },
        update: function() {
        }
      };
      if (!settings.restorePageStateOnPop) {
        return dummyPageStateMemory;
      }
      try {
        return (0, _1.createPageStateMemory)();
      } catch (e) {
        console.error(e);
        return dummyPageStateMemory;
      }
    };
    var documentTitle = function(location, settings) {
      var title = settings.documentTitle(location);
      if (title === null || title === void 0 || typeof title !== "string" || title.trim() === "") {
        console.error("Title [".concat(title, "] is invalid. See https://www.w3.org/TR/UNDERSTANDING-WCAG20/navigation-mechanisms-title.html"));
        return void 0;
      } else {
        return title;
      }
    };
    var createOafRouter = function(settings, hashFromLocation) {
      var resetAutoScrollRestoration = settings.disableAutoScrollRestoration ? (0, _1.disableAutoScrollRestoration)() : function() {
      };
      var pageStateMemory = createPageStateMemoryWithFallback(settings);
      return {
        handleFirstPageLoad: function(location) {
          return __awaiter(void 0, void 0, void 0, function() {
            var title, hash, focusTarget, didFocus;
            return __generator(this, function(_a) {
              switch (_a.label) {
                case 0:
                  title = documentTitle(location, settings);
                  if (settings.setPageTitle && title !== void 0) {
                    (0, oaf_side_effects_1.setTitle)(title);
                  }
                  if (!settings.handleHashFragment)
                    return [3, 2];
                  hash = hashFromLocation(location);
                  focusTarget = (0, oaf_side_effects_1.elementFromHash)(hash);
                  if (!(focusTarget !== void 0))
                    return [3, 2];
                  return [4, (0, oaf_side_effects_1.focusAndScrollIntoViewIfRequired)(focusTarget, focusTarget, settings.smoothScroll)];
                case 1:
                  didFocus = _a.sent();
                  if (!didFocus) {
                    console.warn("Unable to focus element for hash [".concat(hash, "]."));
                  }
                  _a.label = 2;
                case 2:
                  return [2];
              }
            });
          });
        },
        handleLocationChanged: function(previousLocation, currentLocation, currentLocationKey, action) {
          return __awaiter(void 0, void 0, void 0, function() {
            var title, shouldHandleAction, primaryFocusTarget, shouldRestorePageState, previousPageState, pageStateToSet, hash, focusTarget, didFocus;
            return __generator(this, function(_a) {
              switch (_a.label) {
                case 0:
                  title = documentTitle(currentLocation, settings);
                  if (settings.setPageTitle && title !== void 0) {
                    (0, oaf_side_effects_1.setTitle)(title);
                  }
                  shouldHandleAction = settings.shouldHandleAction(previousLocation, currentLocation, action);
                  if (!shouldHandleAction) {
                    return [2];
                  }
                  if (settings.announcePageNavigation) {
                    (0, oaf_side_effects_1.announce)(settings.navigationMessage(title !== null && title !== void 0 ? title : settings.documentTitleAnnounceFallback, currentLocation, action), settings.announcementsDivId, settings.setMessageTimeout, settings.clearMessageTimeout);
                  }
                  if (!settings.repairFocus)
                    return [3, 4];
                  primaryFocusTarget = typeof settings.primaryFocusTarget === "string" ? settings.primaryFocusTarget : settings.primaryFocusTarget(currentLocation);
                  shouldRestorePageState = action === "POP" && settings.restorePageStateOnPop;
                  if (!shouldRestorePageState)
                    return [3, 2];
                  previousPageState = currentLocationKey !== void 0 ? pageStateMemory.pageState(currentLocationKey) : void 0;
                  pageStateToSet = __assign(__assign({}, settings.defaultPageState), previousPageState);
                  return [4, (0, _1.setPageState)(pageStateToSet, primaryFocusTarget)];
                case 1:
                  _a.sent();
                  return [3, 4];
                case 2:
                  hash = hashFromLocation(currentLocation);
                  focusTarget = settings.handleHashFragment ? (0, oaf_side_effects_1.elementFromHash)(hash) : void 0;
                  return [4, (0, oaf_side_effects_1.resetFocus)(primaryFocusTarget, focusTarget, settings.smoothScroll)];
                case 3:
                  didFocus = _a.sent();
                  if (!didFocus) {
                    console.warn("Unable to focus element for primary focus target [".concat(primaryFocusTarget, "] and hash [").concat(hash, "]."));
                  }
                  _a.label = 4;
                case 4:
                  return [2];
              }
            });
          });
        },
        handleLocationWillChange: function(currentLocationKey, nextLocationKey, action) {
          if (settings.restorePageStateOnPop) {
            pageStateMemory.update(action, currentLocationKey, nextLocationKey, (0, _1.getPageState)());
          }
        },
        resetAutoScrollRestoration
      };
    };
    exports.createOafRouter = createOafRouter;
  }
});

// node_modules/oaf-routing/dist/index.js
var require_dist2 = __commonJS({
  "node_modules/oaf-routing/dist/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m)
        if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p))
          __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    __exportStar(require_disable_auto_scroll_restoration(), exports);
    __exportStar(require_page_state_memory(), exports);
    __exportStar(require_page_state(), exports);
    __exportStar(require_router_settings(), exports);
    __exportStar(require_oaf_router(), exports);
  }
});

// node_modules/oaf-react-router/dist/index.js
var require_dist3 = __commonJS({
  "node_modules/oaf-react-router/dist/index.js"(exports) {
    var __assign = exports && exports.__assign || function() {
      __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
          s = arguments[i];
          for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p))
              t[p] = s[p];
        }
        return t;
      };
      return __assign.apply(this, arguments);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.wrapHistory = exports.defaultSettings = void 0;
    var oaf_routing_1 = require_dist2();
    exports.defaultSettings = __assign({}, oaf_routing_1.defaultSettings);
    var wrapHistory = function(history, settingsOverrides) {
      var settings = __assign(__assign({}, exports.defaultSettings), settingsOverrides);
      var oafRouter = (0, oaf_routing_1.createOafRouter)(settings, function(location) {
        return location.hash;
      });
      var initialLocation = history.location;
      setTimeout(function() {
        oafRouter.handleFirstPageLoad(initialLocation);
      }, settings.renderTimeout);
      var previousLocation = initialLocation;
      var unlisten = history.listen(function(update) {
        oafRouter.handleLocationWillChange(previousLocation.key, update.location.key, update.action);
        var stablePreviousLocation = previousLocation;
        setTimeout(function() {
          oafRouter.handleLocationChanged(stablePreviousLocation, update.location, update.location.key, update.action);
        }, settings.renderTimeout);
        previousLocation = update.location;
      });
      return function() {
        oafRouter.resetAutoScrollRestoration();
        unlisten();
      };
    };
    exports.wrapHistory = wrapHistory;
  }
});
export default require_dist3();
//# sourceMappingURL=oaf-react-router.js.map
